default_platform :ios

# Suppress warnings about Google Cloud API limits.
ENV["GOOGLE_AUTH_SUPPRESS_CREDENTIALS_WARNINGS"] = "true"

setup_ci()

before_all do |lane|
  update_fastlane
end

lane :get_app_store_connect_api_key do
  
  ensure_env_vars(
    env_vars: [
      'APP_STORE_CONNECT_API_KEY_KEY_ID',
      'APP_STORE_CONNECT_API_KEY_ISSUER_ID',
      'APP_STORE_CONNECT_API_KEY_KEY'
    ]
  )
  
  app_store_connect_api_key()

end

platform :ios do

  desc "Build the development app for distribution, signed with the staging certificate."
  lane :build_develop do

    # Build number is incremented manually by GitLab CI

    gym(
      workspace: "Runner.xcworkspace",
      scheme: "development",
      export_method: "ad-hoc",
      xcargs: "-allowProvisioningUpdates", # needed for automatic signing
      skip_build_archive: true,
      archive_path: "../build/ios/archive/Runner.xcarchive",
    )

  end

  desc "Build the production app for the distribution, signed with the release certificate."
  lane :build_release do

    # Build number is incremented manually by GitLab CI

    gym(
      workspace: "Runner.xcworkspace",
      scheme: "production",
      export_method: "app-store",
      xcargs: "-allowProvisioningUpdates", # needed for automatic signing
      skip_build_archive: true,
      archive_path: "../build/ios/archive/Runner.xcarchive",
    )

  end

  desc "Push a new develop channel build to Firebase App Distribution."
  lane :develop do

    build_develop()

    firebase_app_distribution(
      groups: "develop-testers",
      release_notes: "Gut Logic Dev"
    )

  end

  desc "Frame screenshots"
  lane :frames do

    frameit(path: './fastlane/screenshots')
  
  end

  desc "Push a new release channel build to TestFlight."
  lane :staging do

    build_release()

    testflight(
      api_key: get_app_store_connect_api_key,
      demo_account_required: true,
      distribute_external: true,
      groups: ["Family and Friends"],
      beta_app_feedback_email: "dev@gutlogic.co",
      reject_build_waiting_for_review: true,
      changelog: File.read("./metadata/what_to_test.txt")
    )

  end

  desc "Push a new release channel build to the App Store."
  lane :release do
  
    build_release()

    appstore(
      api_key: get_app_store_connect_api_key,
      force: true,
      precheck_include_in_app_purchases: false, # cannot yet be performed with API key
      overwrite_screenshots: true,
      # Manually check on App Store Connect before releasing
      submit_for_review: false,
      automatic_release: false
    )

  end

end
