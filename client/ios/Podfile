# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Returns path of firebase_sdk_version script from firebase_core plugin.
def firebase_sdk_version
  require 'json'

  # Find package_config.json which lists absolute paths for each build plugin.
  package_config_path = File.expand_path(File.join('..', '..', '.dart_tool', 'package_config.json'), __FILE__)
  unless File.exist?(package_config_path)
    raise "Unable to find .dart_tool/package_config.json"
  end

  package_config_data = JSON.parse(File.read(package_config_path))

  # Find first package with name 'firebase_core'
  firebase_core_package_config = package_config_data['packages'].find { |p| p['name'] == 'firebase_core' }
  unless firebase_core_package_config != nil
    raise "Unable to find firebase_core package config"
  end

  # Find script defining firebase_core SDK version.
  firebase_sdk_version_root = firebase_core_package_config['rootUri'].sub("file://", "")
  firebase_sdk_version_path = File.expand_path(File.join(firebase_sdk_version_root, 'ios/firebase_sdk_version.rb'))
  unless File.exist?(firebase_sdk_version_path)
    raise "Unable to find firebase_sdk_version.rb script in firebase_core plugin"
  end

  return firebase_sdk_version_path
end

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  require firebase_sdk_version

  Pod::UI.puts "Using FirebaseFirestore version '#{firebase_sdk_version!}'"
  
  # Accelerate cloud_firestore builds (https://github.com/FirebaseExtended/flutterfire/issues/2751)
  pod 'FirebaseFirestore', :git => 'https://github.com/invertase/firestore-ios-sdk-frameworks.git', :tag => "#{firebase_sdk_version!}"
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
    end
  end
end
