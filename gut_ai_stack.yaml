AWSTemplateFormatVersion: 2010-09-09


Resources:

  GutAITable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: nameId
          AttributeType: S
        - 
          AttributeName: entryId
          AttributeType: S
      KeySchema: 
        - 
          AttributeName: nameId
          KeyType: HASH
        - 
          AttributeName: entryId
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: GutAITable




  DynamoDBRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: gut-ai-appsync-dynamodb-role
      ManagedPolicyArns:
        - Ref: AppSyncDynamoDBPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com
    DependsOn:
      - AppSyncDynamoDBPolicy

  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: gut-ai-cloudwatch-role
      ManagedPolicyArns:
        - Ref: AWSAppSyncPushToCloudWatchLogsRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com
    DependsOn:
      - AWSAppSyncPushToCloudWatchLogsRole

  AppSyncDynamoDBPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Managed policy to allow AWS AppSync to access the tables created by this template.
      Path: /appsync/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:UpdateItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
            Resource: !Join [ "", [ !GetAtt GutAITable.Arn, "*" ] ]

  AWSAppSyncPushToCloudWatchLogsRole:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Managed policy to allow AWS AppSync to push to CloudWatch Logs.
      Path: /appsync/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "*"

  AppSyncAPI:
    Type: AWS::AppSync::GraphQLApi
    Properties: 
      AuthenticationType: API_KEY
      Name: GutAIAppSync
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt CloudWatchRole.Arn
        FieldLogLevel: ALL

  
  GraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties: 
      ApiId: !GetAtt AppSyncAPI.ApiId
      DefinitionS3Location: schema.graphql


  AppSyncDataSource:
    Type: AWS::AppSync::DataSource    
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      Name: GutAITable
      Description: The Gut AI DynamoDB table in us-east-1
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !GetAtt DynamoDBRole.Arn
      DynamoDBConfig:
        TableName: !Ref GutAITable
        AwsRegion: !Sub ${AWS::Region}

# Food Resolvers

  AppSyncListFoodsQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Query
      FieldName: listFoods
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/food/listFoodsRequest.vtl
      ResponseMappingTemplate: "$util.toJson($context.result)"

  AppSyncGetFoodQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Query
      FieldName: getFood
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/food/getFoodRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncCreateFoodMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: createFood
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/food/createFoodRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncUpdateFoodMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: updateFood
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/food/updateFoodRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncDeleteFoodMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: deleteFood
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/food/deleteFoodRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

# Ingredient Resolvers

  AppSyncListIngredientsQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Query
      FieldName: listIngredients
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/ingredient/listIngredientsRequest.vtl
      ResponseMappingTemplate: "$util.toJson($context.result)"

  AppSyncGetIngredientQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Query
      FieldName: getIngredient
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/ingredient/getIngredientRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncCreateIngredientMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: createIngredient
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/ingredient/createIngredientRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncUpdateIngredientMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: updateIngredient
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/ingredient/updateIngredientRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncDeleteIngredientMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: deleteIngredient
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/ingredient/deleteIngredientRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

# Medicine Resolvers

  AppSyncListMedicinesQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Query
      FieldName: listMedicines
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/medicine/listMedicinesRequest.vtl
      ResponseMappingTemplate: "$util.toJson($context.result)"

  AppSyncGetMedicineQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Query
      FieldName: getMedicine
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/medicine/getMedicineRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncCreateMedicineMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: createMedicine
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/medicine/createMedicineRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncUpdateMedicineMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: updateMedicine
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/medicine/updateMedicineRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncDeleteMedicineMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: deleteMedicine
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/medicine/deleteMedicineRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

# Diary Entry Resolvers

  AppSyncListDiaryEntriesQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Query
      FieldName: listDiaryEntries
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/diaryEntry/listDiaryEntriesRequest.vtl
      ResponseMappingTemplate: "$util.toJson($context.result)"

  AppSyncGetDiaryEntryQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Query
      FieldName: getDiaryEntry
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/diaryEntry/getDiaryEntryRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncCreateDiaryEntryMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: createDiaryEntry
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/diaryEntry/createDiaryEntryRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncUpdateDiaryEntryMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: updateDiaryEntry
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/diaryEntry/updateDiaryEntryRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncDeleteDiaryEntryMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Mutation
      FieldName: deleteDiaryEntry
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/diaryEntry/deleteDiaryEntryRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncFoodIngredientResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncAPI.ApiId
      TypeName: Ingredient
      FieldName: food
      DataSourceName: !GetAtt AppSyncDataSource.Name
      RequestMappingTemplateS3Location: resolver/diaryEntry/getFoodRequest.vtl
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

Outputs:
  GutAITableName:
    Description: The name of the DynamoDB Table
    Value: !Ref GutAITable
  GraphQLApiEndpoint:
    Description: The URL to the GraphQL Endpoint
    Value: !GetAtt AppSyncAPI.GraphQLUrl
  GraphQLApiId:
    Description: The API ID of the GraphQL API
    Value: !GetAtt AppSyncAPI.ApiId