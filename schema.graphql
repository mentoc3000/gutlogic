# FOOD

type Food @aws_iam {
  nameId: String!
  entryId: String!
  name: String!
}

type PaginatedFoods @aws_iam {
  items: [Food!]
  nextToken: String
}

input CreateFoodInput @aws_iam {
  name: String!
}

input UpdateFoodInput @aws_iam {
  nameId: String!
  entryId: String!
  name: String
}

input TableFoodFilterInput @aws_iam {
  nameId: TableStringFilterInput
  entryId: TableStringFilterInput
  name: TableStringFilterInput
}

# INGREDIENT

type Ingredient @aws_iam {
  nameId: String!
  entryId: String!
  mealEntry: DiaryEntry!
  food: Food!
  quantity: Quantity!
}

type Ingredients @aws_iam {
  items: [Ingredient!]
}

type Quantity @aws_iam {
  amount: Float!
  unit: String!
}

input CreateIngredientInput @aws_iam {
  userId: String!
  mealEntryId: GutAiIdInput!
  foodId: GutAiIdInput!
  quantity: QuantityInput!
}

input UpdateIngredientInput @aws_iam {
  nameId: String!
  entryId: String!
  mealEntryId: GutAiIdInput
  foodId: GutAiIdInput
  quantity: QuantityInput
}

input TableIngredientFilterInput @aws_iam {
  mealEntryId: GutAiIdInput!
}

input QuantityInput @aws_iam {
  amount: Float!
  unit: String!
}

# MEDICINE

type Medicine @aws_iam {
  nameId: String!
  entryId: String!
  name: String!
}

type PaginatedMedicines @aws_iam {
  items: [Medicine!]
  nextToken: String
}

input CreateMedicineInput @aws_iam {
  name: String!
}

input UpdateMedicineInput @aws_iam {
  nameId: String!
  entryId: String!
  name: String
}

input TableMedicineFilterInput @aws_iam {
  nameId: TableStringFilterInput
  entryId: TableStringFilterInput
  name: TableStringFilterInput
}

# DOSE

type Dose @aws_iam {
  nameId: String!
  entryId: String!
  dosageEntry: DiaryEntry!
  medicine: Medicine!
  quantity: Quantity!
}

type Doses @aws_iam {
  items: [Dose!]
}

input CreateDoseInput @aws_iam {
  userId: String!
  dosageEntryId: GutAiIdInput!
  medicineId: GutAiIdInput!
  quantity: QuantityInput!
}

input UpdateDoseInput @aws_iam {
  nameId: String!
  entryId: String!
  dosageEntryId: GutAiIdInput
  medicineId: GutAiIdInput
  quantity: QuantityInput
}

input TableDoseFilterInput @aws_iam {
  dosageEntryId: GutAiIdInput!
}

# DIARY ENTRY

type DiaryEntry @aws_iam {
  nameId: String!
  entryId: String!
  creationDate: AWSDateTime!
  modificationDate: AWSDateTime!
  datetime: AWSDateTime!
  meal: Meal
  bowelMovement: BowelMovement
  dosage: Dosage
  symptom: Symptom
  notes: String
}

type PaginatedDiaryEntries @aws_iam {
  items: [DiaryEntry!]
  nextToken: String
}

input CreateDiaryEntryInput @aws_iam {
  userId: String!
  creationDate: AWSDateTime!
  modificationDate: AWSDateTime!
  datetime: AWSDateTime!
  meal: MealInput
  bowelMovement: BowelMovementInput
  dosage: DosageInput
  symptom: SymptomInput
  notes: String
}

input CreateMealEntryInput @aws_iam {
  userId: String!
  creationDate: AWSDateTime!
  datetime: AWSDateTime!
}

input CreateBowelMovementEntryInput @aws_iam {
  userId: String!
  creationDate: AWSDateTime!
  datetime: AWSDateTime!
  bowelMovement: BowelMovementInput!
}

input CreateDosageEntryInput @aws_iam {
  userId: String!
  creationDate: AWSDateTime!
  datetime: AWSDateTime!
}

input CreateSymptomEntryInput @aws_iam {
  userId: String!
  creationDate: AWSDateTime!
  datetime: AWSDateTime!
  symptom: SymptomInput!
}

input UpdateDiaryEntryInput @aws_iam {
  nameId: String!
  entryId: String!
  creationDate: AWSDateTime
  modificationDate: AWSDateTime!
  datetime: AWSDateTime
  meal: MealInput
  bowelMovement: BowelMovementInput
  dosage: DosageInput
  symptom: SymptomInput
  notes: String
}

input UpdateMealEntryInput @aws_iam {
  nameId: String!
  entryId: String!
  creationDate: AWSDateTime
  modificationDate: AWSDateTime!
  datetime: AWSDateTime
  meal: MealInput
  notes: String
}

input UpdateBowelMovementEntryInput @aws_iam {
  nameId: String!
  entryId: String!
  creationDate: AWSDateTime
  modificationDate: AWSDateTime!
  datetime: AWSDateTime
  bowelMovement: BowelMovementInput
  notes: String
}

input UpdateDosageEntryInput @aws_iam {
  nameId: String!
  entryId: String!
  creationDate: AWSDateTime
  modificationDate: AWSDateTime!
  datetime: AWSDateTime
  dosage: DosageInput
  notes: String
}

input UpdateSymptomEntryInput @aws_iam {
  nameId: String!
  entryId: String!
  creationDate: AWSDateTime
  modificationDate: AWSDateTime!
  datetime: AWSDateTime
  symptom: SymptomInput
  notes: String
}

input TableDiaryEntryFilterInput @aws_iam {
  datetime: TableAWSDateTimeFilterInput
}

# MEAL ENTRY

type Meal @aws_iam {
  ingredients: [Ingredient!]
}

input MealInput @aws_iam {
  ingredients: [GutAiIdInput!]
}

# BOWEL MOVEMENT ENTRY

type BowelMovement @aws_iam {
  type: Int!
  volume: Int!
}

input BowelMovementInput @aws_iam {
  type: Int!
  volume: Int!
}

# DOSAGE ENTRY

type Dosage @aws_iam {
  doses: [Dose!]
}

input DosageInput @aws_iam {
  doses: [GutAiIdInput!]
}

# SYMPTOM

type Symptom @aws_iam {
  symptomType: SymptomType!
  severity: Float!
}

input SymptomInput @aws_iam {
  symptomType: SymptomTypeInput!
  severity: Float!
}

type SymptomType @aws_iam {
  name: String!
}

input SymptomTypeInput @aws_iam {
  name: String!
}

# GENERIC

type GutAiId @aws_iam {
  nameId: String!
  entryId: String!
}

input GutAiIdInput @aws_iam {
  nameId: String!
  entryId: String!
}

input TableBooleanFilterInput @aws_iam {
  ne: Boolean
  eq: Boolean
}

input TableFloatFilterInput @aws_iam {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  contains: Float
  notContains: Float
  between: [Float]
}

input TableIDFilterInput @aws_iam {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
}

input TableIntFilterInput @aws_iam {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  contains: Int
  notContains: Int
  between: [Int]
}

input TableStringFilterInput @aws_iam {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input TableAWSDateTimeFilterInput @aws_iam {
  ne: AWSDateTime
  eq: AWSDateTime
  le: AWSDateTime
  lt: AWSDateTime
  ge: AWSDateTime
  gt: AWSDateTime
  between: [AWSDateTime]
}

type Query {
  getFood(nameId: String!, entryId: String!): Food
  @aws_iam
  listFoods(
    filter: TableFoodFilterInput
    limit: Int
    nextToken: String
  ): PaginatedFoods!
  @aws_iam

  getIngredient(nameId: String!, entryId: String!): Ingredient
  @aws_iam
  listIngredients(filter: TableIngredientFilterInput): Ingredients
  @aws_iam

  getMedicine(nameId: String!, entryId: String!): Medicine
  @aws_iam
  listMedicines(
    filter: TableMedicineFilterInput
    limit: Int
    nextToken: String
  ): PaginatedMedicines!
  @aws_iam

  getDose(nameId: String!, entryId: String!): Dose
  @aws_iam
  listDoses(filter: TableDoseFilterInput): Doses
  @aws_iam

  getDiaryEntry(nameId: String!, entryId: String!): DiaryEntry
  @aws_iam
  listDiaryEntries(
    userId: String!
    filter: TableDiaryEntryFilterInput
    limit: Int
    nextToken: String
  ): PaginatedDiaryEntries!
  @aws_iam
}

type Mutation {
  createFood(input: CreateFoodInput!): Food
  @aws_iam
  updateFood(input: UpdateFoodInput!): Food
  @aws_iam
  deleteFood(input: GutAiIdInput!): Food
  @aws_iam

  createIngredient(input: CreateIngredientInput!): Ingredient
  @aws_iam
  addIngredient(input: CreateIngredientInput!): Ingredient
  @aws_iam
  updateIngredient(input: UpdateIngredientInput!): Ingredient
  @aws_iam
  deleteIngredient(input: GutAiIdInput!): Ingredient
  @aws_iam

  createMedicine(input: CreateMedicineInput!): Medicine
  @aws_iam
  updateMedicine(input: UpdateMedicineInput!): Medicine
  @aws_iam
  deleteMedicine(input: GutAiIdInput!): Medicine
  @aws_iam

  createDose(input: CreateDoseInput!): Dose
  @aws_iam
  addDose(input: CreateDoseInput!): Dose
  @aws_iam
  updateDose(input: UpdateDoseInput!): Dose
  @aws_iam
  deleteDose(input: GutAiIdInput!): Dose
  @aws_iam

  createDiaryEntry(input: CreateDiaryEntryInput!): DiaryEntry
  @aws_iam
  updateDiaryEntry(input: UpdateDiaryEntryInput!): DiaryEntry
  @aws_iam
  deleteDiaryEntry(input: GutAiIdInput!): DiaryEntry
  @aws_iam

  createMealEntry(input: CreateMealEntryInput!): DiaryEntry
  @aws_iam
  updateMealEntry(input: UpdateMealEntryInput!): DiaryEntry
  @aws_iam
  
  createBowelMovementEntry(input: CreateBowelMovementEntryInput!): DiaryEntry
  @aws_iam
  updateBowelMovementEntry(input: UpdateBowelMovementEntryInput!): DiaryEntry
  @aws_iam
  
  createDosageEntry(input: CreateDosageEntryInput!): DiaryEntry
  @aws_iam
  updateDosageEntry(input: UpdateDosageEntryInput!): DiaryEntry
  @aws_iam
  
  createSymptomEntry(input: CreateSymptomEntryInput!): DiaryEntry
  @aws_iam
  updateSymptomEntry(input: UpdateSymptomEntryInput!): DiaryEntry
  @aws_iam
  
  deleteItem(input: GutAiIdInput!): GutAiId
  @aws_iam
}

type Schema {
  query: Query
  mutation: Mutation
}
